{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zagho\\\\PFE_Git\\\\Full-Project-MERN\\\\client\\\\src\\\\Component\\\\Preferences.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // react component that copies the given text inside your clipboard\n\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"; // import PetsIcon from \"@material-ui/icons/Pets\";\n// import InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import Battery20Icon from \"@material-ui/icons/Battery20\";\n// import Battery30Icon from \"@material-ui/icons/Battery30\";\n// import Battery80Icon from \"@material-ui/icons/Battery80\";\n// import BatteryChargingFullIcon from \"@material-ui/icons/BatteryChargingFull\";\n// import FastfoodIcon from \"@material-ui/icons/Fastfood\";\n\nimport { getProfile, seePreferences, addPreferences, updateProfile } from \"../JS/actions\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, Container, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preferences = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.userReducer.isAuth);\n  const user = useSelector(state => state.userReducer.user);\n  const loading = useSelector(state => state.userReducer.loading);\n  const themes = useSelector(state => state.userReducer.themes);\n  const difficulties = useSelector(state => state.userReducer.difficulties);\n  const phobies = useSelector(state => state.userReducer.phobies);\n  const preferences = useSelector(state => state.userReducer.preferences);\n  const [localPref, setlocalPref] = useState([]);\n  let arr = [];\n  useEffect(() => {\n    dispatch(getProfile());\n    dispatch(seePreferences());\n  }, [dispatch]);\n  useEffect(() => {\n    if (user) setlocalPref(user.myPreferences);\n  }, [user]); //Filter the preferences user table if it includes Duplicated items\n\n  let chars = [];\n  let uniqueChars = []; // console.log(uniqueChars);\n\n  return loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this) : !localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-7\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-3\",\n        children: \"Dites nous ce que vous pr\\xE9f\\xE9rez \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Appuez sur les caract\\xE9ristiques d'exp\\xE9riences que vous voulez voir plus que les autres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-0\",\n                children: \"les th\\xE9mes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"icon-examples\",\n                children: preferences.map(el => el.themes.map(theme => {\n                  // console.log(\n                  //   \"ðŸš€ ~ file: Preferences.js ~ line 68 ~ el.themes.map ~ theme\",\n                  //   theme\n                  // );\n                  // console.log(localPref);\n                  return /*#__PURE__*/_jsxDEV(Col, {\n                    lg: \"3\",\n                    md: \"6\",\n                    children: [console.log(localPref), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                      text: \"ni ni-active-40\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: `${localPref.includes(theme._id) ? \"Clicked\" : \"notClicked\"} btn-icon-clipboard `,\n                        onClick: () => `${localPref.includes(theme._id) ? dispatch(updateProfile(user._id, { ...user,\n                          myPreferences: [...new Set(localPref)]\n                        })) : dispatch(addPreferences(user._id, theme._id))}`,\n                        type: \"button\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                            src: theme.icon,\n                            width: \"30\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 116,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: theme.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 117,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this);\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-0\",\n                children: \"les difficult\\xE9s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"icon-examples\",\n                children: preferences.map(el => el.difficulties.map(difficulties => /*#__PURE__*/_jsxDEV(Col, {\n                  lg: \"3\",\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                    text: \"ni ni-active-40\" // onCopy={() => setCopiedText(\"ni ni-active-40\")}\n                    ,\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn-icon-clipboard\",\n                      id: \"Sport\",\n                      type: \"button\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: difficulties.icon,\n                          width: \"30\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: difficulties.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 148,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-0\",\n                children: \"les phobies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"icon-examples\",\n                children: preferences.map(el => el.phobies.map(phobies => /*#__PURE__*/_jsxDEV(Col, {\n                  lg: \"3\",\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                    text: \"ni ni-active-40\" // onCopy={() => setCopiedText(\"ni ni-active-40\")}\n                    ,\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn-icon-clipboard\",\n                      type: \"button\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: phobies.icon,\n                          width: \"30\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: phobies.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preferences, \"3PPeVhi9AhNk10ZfPeySnuCd6vE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Preferences;\nexport default Preferences;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"sources":["C:/Users/zagho/PFE_Git/Full-Project-MERN/client/src/Component/Preferences.js"],"names":["React","useEffect","useState","CopyToClipboard","getProfile","seePreferences","addPreferences","updateProfile","Redirect","useDispatch","useSelector","Card","CardHeader","CardBody","Container","Row","Col","UncontrolledTooltip","Preferences","dispatch","isAuth","state","userReducer","user","loading","themes","difficulties","phobies","preferences","localPref","setlocalPref","arr","myPreferences","chars","uniqueChars","localStorage","getItem","map","el","theme","console","log","includes","_id","Set","icon","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// react component that copies the given text inside your clipboard\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n// import PetsIcon from \"@material-ui/icons/Pets\";\r\n// import InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import Battery20Icon from \"@material-ui/icons/Battery20\";\r\n// import Battery30Icon from \"@material-ui/icons/Battery30\";\r\n// import Battery80Icon from \"@material-ui/icons/Battery80\";\r\n// import BatteryChargingFullIcon from \"@material-ui/icons/BatteryChargingFull\";\r\n// import FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport {\r\n  getProfile,\r\n  seePreferences,\r\n  addPreferences,\r\n  updateProfile,\r\n} from \"../JS/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip,\r\n} from \"reactstrap\";\r\n\r\nconst Preferences = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.userReducer.isAuth);\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const loading = useSelector((state) => state.userReducer.loading);\r\n  const themes = useSelector((state) => state.userReducer.themes);\r\n  const difficulties = useSelector((state) => state.userReducer.difficulties);\r\n  const phobies = useSelector((state) => state.userReducer.phobies);\r\n  const preferences = useSelector((state) => state.userReducer.preferences);\r\n  const [localPref, setlocalPref] = useState([]);\r\n  let arr = [];\r\n  useEffect(() => {\r\n    dispatch(getProfile());\r\n    dispatch(seePreferences());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) setlocalPref(user.myPreferences);\r\n  }, [user]);\r\n\r\n  //Filter the preferences user table if it includes Duplicated items\r\n  let chars = [];\r\n  let uniqueChars = [];\r\n  // console.log(uniqueChars);\r\n\r\n  return loading ? (\r\n    <h1>Loading ...</h1>\r\n  ) : !localStorage.getItem(\"token\") ? (\r\n    <Redirect to=\"/login\" />\r\n  ) : (\r\n    <div>\r\n      <Container className=\"mt-7\" fluid>\r\n        {/* Table */}\r\n        <h1 className=\"mb-3\">Dites nous ce que vous prÃ©fÃ©rez </h1>\r\n        <p>\r\n          Appuez sur les caractÃ©ristiques d'expÃ©riences que vous voulez voir\r\n          plus que les autres\r\n        </p>\r\n        <hr />\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <h3 className=\"mb-0\">les thÃ©mes</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row className=\"icon-examples\">\r\n                  {preferences.map((el) =>\r\n                    el.themes.map((theme) => {\r\n                      // console.log(\r\n                      //   \"ðŸš€ ~ file: Preferences.js ~ line 68 ~ el.themes.map ~ theme\",\r\n                      //   theme\r\n                      // );\r\n                      // console.log(localPref);\r\n\r\n                      return (\r\n                        <Col lg=\"3\" md=\"6\">\r\n                          {console.log(localPref)}\r\n                          <CopyToClipboard text={\"ni ni-active-40\"}>\r\n                            <button\r\n                              className={`${\r\n                                localPref.includes(theme._id)\r\n                                  ? \"Clicked\"\r\n                                  : \"notClicked\"\r\n                              } btn-icon-clipboard `}\r\n                              onClick={() =>\r\n                                `${\r\n                                  localPref.includes(theme._id)\r\n                                    ? dispatch(\r\n                                        updateProfile(user._id, {\r\n                                          ...user,\r\n                                          myPreferences: [\r\n                                            ...new Set(localPref),\r\n                                          ],\r\n                                        })\r\n                                      )\r\n                                    : dispatch(\r\n                                        addPreferences(user._id, theme._id)\r\n                                      )\r\n                                }`\r\n                              }\r\n                              type=\"button\"\r\n                            >\r\n                              <div>\r\n                                <img src={theme.icon} width=\"30\" />\r\n                                <span>{theme.name}</span>\r\n                              </div>\r\n                            </button>\r\n                          </CopyToClipboard>\r\n                        </Col>\r\n                      );\r\n                    })\r\n                  )}\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <h3 className=\"mb-0\">les difficultÃ©s</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row className=\"icon-examples\">\r\n                  {preferences.map((el) =>\r\n                    el.difficulties.map((difficulties) => (\r\n                      <Col lg=\"3\" md=\"6\">\r\n                        <CopyToClipboard\r\n                          text={\"ni ni-active-40\"}\r\n                          // onCopy={() => setCopiedText(\"ni ni-active-40\")}\r\n                        >\r\n                          <button\r\n                            className=\"btn-icon-clipboard\"\r\n                            id=\"Sport\"\r\n                            type=\"button\"\r\n                          >\r\n                            <div>\r\n                              <img src={difficulties.icon} width=\"30\" />\r\n                              <span>{difficulties.name}</span>\r\n                            </div>\r\n                          </button>\r\n                        </CopyToClipboard>\r\n                      </Col>\r\n                    ))\r\n                  )}\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <h3 className=\"mb-0\">les phobies</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row className=\"icon-examples\">\r\n                  {preferences.map((el) =>\r\n                    el.phobies.map((phobies) => (\r\n                      <Col lg=\"3\" md=\"6\">\r\n                        <CopyToClipboard\r\n                          text={\"ni ni-active-40\"}\r\n                          // onCopy={() => setCopiedText(\"ni ni-active-40\")}\r\n                        >\r\n                          <button className=\"btn-icon-clipboard\" type=\"button\">\r\n                            <div>\r\n                              <img src={phobies.icon} width=\"30\" />\r\n                              <span>{phobies.name}</span>\r\n                            </div>\r\n                          </button>\r\n                        </CopyToClipboard>\r\n                      </Col>\r\n                    ))\r\n                  )}\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preferences;\r\n"]},"metadata":{},"sourceType":"module"}
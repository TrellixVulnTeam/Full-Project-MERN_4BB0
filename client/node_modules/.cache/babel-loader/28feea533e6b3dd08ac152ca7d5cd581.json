{"ast":null,"code":"import { FETCH_ALL_EXPERIENCES, FETCH_ALL_EXPERIENCES_SUCCESS, FETCH_ALL_EXPERIENCES_FAIL, FETCH_EXPERIENCE_DETAILS, FETCH_EXPERIENCE_DETAILS_SUCCESS, FETCH_EXPERIENCE_DETAILS_FAIL, ADD_EXPERIENCE, ADD_EXPERIENCE_SUCCESS, ADD_EXPERIENCE_FAIL, CLEAR_ERRORS, UPDATE_EXPERIENCE_FAIL, UPDATE_EXPERIENCE_SUCCESS, UPDATE_EXPERIENCE } from \"../constants/experienceConstants\";\nconst initialState = {\n  experiences: [],\n  experienceDetails: {},\n  isLoading: false\n};\nexport const experiencesReducers = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_ALL_EXPERIENCES:\n      return {\n        isLoading: true,\n        experiences: []\n      };\n\n    case FETCH_ALL_EXPERIENCES_SUCCESS:\n      return {\n        isLoading: false,\n        experiences: payload.experiences,\n        experiencesCount: payload.experiencesCount\n      };\n\n    case FETCH_ALL_EXPERIENCES_FAIL:\n      return {\n        isLoading: false,\n        error: payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    case FETCH_EXPERIENCE_DETAILS:\n      return { ...state,\n        isLoading: true\n      };\n\n    case FETCH_EXPERIENCE_DETAILS_SUCCESS:\n      return {\n        isLoading: false,\n        experience: payload\n      };\n\n    case FETCH_EXPERIENCE_DETAILS_FAIL:\n      return { ...state,\n        error: payload\n      };\n\n    case ADD_EXPERIENCE:\n      return { ...state,\n        isLoading: true\n      };\n\n    case ADD_EXPERIENCE_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        experience: payload\n      };\n\n    case ADD_EXPERIENCE_FAIL:\n      return { ...state,\n        isLoading: false,\n        errors: payload\n      };\n\n    case UPDATE_EXPERIENCE:\n      return { ...state,\n        isLoading: true\n      };\n\n    case UPDATE_EXPERIENCE_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        experience: payload.experience\n      };\n\n    case UPDATE_EXPERIENCE_FAIL:\n      return { ...state,\n        isLoading: false,\n        errors: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/zagho/PFE_Git/Full-Project-MERN/client/src/JS/reducers/experienceReducers.js"],"names":["FETCH_ALL_EXPERIENCES","FETCH_ALL_EXPERIENCES_SUCCESS","FETCH_ALL_EXPERIENCES_FAIL","FETCH_EXPERIENCE_DETAILS","FETCH_EXPERIENCE_DETAILS_SUCCESS","FETCH_EXPERIENCE_DETAILS_FAIL","ADD_EXPERIENCE","ADD_EXPERIENCE_SUCCESS","ADD_EXPERIENCE_FAIL","CLEAR_ERRORS","UPDATE_EXPERIENCE_FAIL","UPDATE_EXPERIENCE_SUCCESS","UPDATE_EXPERIENCE","initialState","experiences","experienceDetails","isLoading","experiencesReducers","state","type","payload","experiencesCount","error","experience","errors"],"mappings":"AAAA,SACEA,qBADF,EAEEC,6BAFF,EAGEC,0BAHF,EAIEC,wBAJF,EAKEC,gCALF,EAMEC,6BANF,EAOEC,cAPF,EAQEC,sBARF,EASEC,mBATF,EAUEC,YAVF,EAWEC,sBAXF,EAYEC,yBAZF,EAaEC,iBAbF,QAcO,kCAdP;AAgBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,iBAAiB,EAAE,EAFA;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAKA,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,KAAK,GAAGL,YADyB,EAEjC;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAFiC,KAG9B;AACH,UAAQD,IAAR;AACE,SAAKnB,qBAAL;AACE,aAAO;AACLgB,QAAAA,SAAS,EAAE,IADN;AAELF,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKb,6BAAL;AACE,aAAO;AACLe,QAAAA,SAAS,EAAE,KADN;AAELF,QAAAA,WAAW,EAAEM,OAAO,CAACN,WAFhB;AAGLO,QAAAA,gBAAgB,EAAED,OAAO,CAACC;AAHrB,OAAP;;AAKF,SAAKnB,0BAAL;AACE,aAAO;AACLc,QAAAA,SAAS,EAAE,KADN;AAELM,QAAAA,KAAK,EAAEF;AAFF,OAAP;;AAIF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELI,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF,SAAKnB,wBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKZ,gCAAL;AACE,aAAO;AACLY,QAAAA,SAAS,EAAE,KADN;AAELO,QAAAA,UAAU,EAAEH;AAFP,OAAP;;AAIF,SAAKf,6BAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELI,QAAAA,KAAK,EAAEF;AAFF,OAAP;;AAIF,SAAKd,cAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKT,sBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLO,QAAAA,UAAU,EAAEH;AAHP,OAAP;;AAKF,SAAKZ,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLQ,QAAAA,MAAM,EAAEJ;AAHH,OAAP;;AAKF,SAAKR,iBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAKF,SAAKL,yBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLO,QAAAA,UAAU,EAAEH,OAAO,CAACG;AAHf,OAAP;;AAMF,SAAKb,sBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLQ,QAAAA,MAAM,EAAEJ;AAHH,OAAP;;AAMF;AACE,aAAOF,KAAP;AA3EJ;AA6ED,CAjFM","sourcesContent":["import {\r\n  FETCH_ALL_EXPERIENCES,\r\n  FETCH_ALL_EXPERIENCES_SUCCESS,\r\n  FETCH_ALL_EXPERIENCES_FAIL,\r\n  FETCH_EXPERIENCE_DETAILS,\r\n  FETCH_EXPERIENCE_DETAILS_SUCCESS,\r\n  FETCH_EXPERIENCE_DETAILS_FAIL,\r\n  ADD_EXPERIENCE,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_FAIL,\r\n  CLEAR_ERRORS,\r\n  UPDATE_EXPERIENCE_FAIL,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE,\r\n} from \"../constants/experienceConstants\";\r\n\r\nconst initialState = {\r\n  experiences: [],\r\n  experienceDetails: {},\r\n  isLoading: false,\r\n};\r\nexport const experiencesReducers = (\r\n  state = initialState,\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case FETCH_ALL_EXPERIENCES:\r\n      return {\r\n        isLoading: true,\r\n        experiences: [],\r\n      };\r\n    case FETCH_ALL_EXPERIENCES_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        experiences: payload.experiences,\r\n        experiencesCount: payload.experiencesCount,\r\n      };\r\n    case FETCH_ALL_EXPERIENCES_FAIL:\r\n      return {\r\n        isLoading: false,\r\n        error: payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case FETCH_EXPERIENCE_DETAILS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case FETCH_EXPERIENCE_DETAILS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        experience: payload,\r\n      };\r\n    case FETCH_EXPERIENCE_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    case ADD_EXPERIENCE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ADD_EXPERIENCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        experience: payload,\r\n      };\r\n    case ADD_EXPERIENCE_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errors: payload,\r\n      };\r\n    case UPDATE_EXPERIENCE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case UPDATE_EXPERIENCE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        experience: payload.experience,\r\n      };\r\n\r\n    case UPDATE_EXPERIENCE_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errors: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
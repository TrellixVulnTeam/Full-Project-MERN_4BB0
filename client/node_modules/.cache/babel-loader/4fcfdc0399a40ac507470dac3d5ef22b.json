{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zagho\\\\PFE_Git\\\\Full-Project-MERN\\\\client\\\\src\\\\Component\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport addUser from \"../JS/actions/index\"; //Bootstrap\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useAlert } from \"react-alert\";\nimport { Container, Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\nimport AuthNavbar from \"./layout/AuthNavbar\";\nimport Loader from \"./layout/Loader\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const loading = useSelector(state => state.userReducer.loading);\n  const user = useSelector(state => state.userReducer.user);\n  const error = useSelector(state => state.userReducer.errors);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = e => {\n    dispatch(addUser({\n      name,\n      email,\n      password,\n      phoneNumber\n    }));\n  };\n\n  const showAlert = () => {\n    alert(error.msg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : user ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header bg-white py-7 py-lg-6\",\n      children: [/*#__PURE__*/_jsxDEV(AuthNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"10\",\n        md: \"8\",\n        className: \"center border\",\n        style: {\n          padding: \"1%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"bg-secondary  border\",\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                className: \"bg-transparent\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Cr\\xE9er votre compte\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                className: \"px-lg-5 py-lg-5\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  role: \"form\",\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"input-group-alternative mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                        addonType: \"prepend\",\n                        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"ni ni-hat-3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 81,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 80,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        name: \"name\",\n                        placeholder: \"Nom et pr\\xE9nom\",\n                        onChange: e => setName(e.target.value),\n                        invalid: errors[\"name\"],\n                        innerRef: register({\n                          required: \"Le champ nom est obligatoire.\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mr-2 text-sm\",\n                      style: {\n                        color: \"#dd3a4a\"\n                      },\n                      children: errors.name.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"input-group-alternative mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                        addonType: \"prepend\",\n                        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"ni ni-email-83\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 108,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"email\",\n                        name: \"email\",\n                        placeholder: \"Email\",\n                        onChange: e => {\n                          setEmail(e.target.value);\n                        },\n                        invalid: errors[\"email\"],\n                        innerRef: register({\n                          required: \"Le champ email est obligatoire.\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this), errors.email && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"mr-2 text-sm\",\n                        style: {\n                          color: \"#dd3a4a\"\n                        },\n                        children: errors.email.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 29\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mr-2 text-sm\",\n                      style: {\n                        color: \"#dd3a4a\"\n                      },\n                      children: error.msg\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"input-group-alternative\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                        addonType: \"prepend\",\n                        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-phone-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 149,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 148,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        name: \"phonenumber\",\n                        placeholder: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n                        onChange: e => setPhoneNumber(e.target.value),\n                        invalid: errors[\"phonenumber\"],\n                        innerRef: register({\n                          required: \"Le champ téléphone est obligatoire.\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, this), errors.phonenumber && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mr-2 text-sm\",\n                      style: {\n                        color: \"#dd3a4a\"\n                      },\n                      children: errors.phonenumber.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"input-group-alternative\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                        addonType: \"prepend\",\n                        children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"ni ni-lock-circle-open\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 176,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"Password\",\n                        name: \"password\",\n                        placeholder: \"Mot de passe\",\n                        onChange: e => setPassword(e.target.value),\n                        invalid: errors[\"password\"],\n                        innerRef: register({\n                          required: \"Le mot de passe est obligatoire.\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 25\n                    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mr-2 text-sm\",\n                      style: {\n                        color: \"#dd3a4a\"\n                      },\n                      children: errors.password.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/login\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-muted font-italic\",\n                          children: /*#__PURE__*/_jsxDEV(\"small\", {\n                            children: \"Se connecter \\xE0 un compte existant\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 203,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"primary\",\n                          type: \"submit\",\n                          children: \"S'inscrire\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"...\",\n              src: require(\"../Assets/img/brand/register.jpg\").default,\n              style: {\n                width: \"100%\",\n                marginTop: \"11%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"VaLo/s/5whXWoWJ9VPVRvZ+KD8g=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useForm];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/zagho/PFE_Git/Full-Project-MERN/client/src/Component/signup.js"],"names":["React","useState","useDispatch","useSelector","Link","Redirect","addUser","useAlert","Container","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","AuthNavbar","Loader","useForm","Signup","loading","state","userReducer","user","error","errors","dispatch","name","setName","email","setEmail","password","setPassword","phoneNumber","setPhoneNumber","register","handleSubmit","onSubmit","e","showAlert","alert","msg","padding","target","value","required","color","message","phonenumber","require","default","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport addUser from \"../JS/actions/index\";\r\n//Bootstrap\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport AuthNavbar from \"./layout/AuthNavbar\";\r\nimport Loader from \"./layout/Loader\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Signup = () => {\r\n  const loading = useSelector((state) => state.userReducer.loading);\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const error = useSelector((state) => state.userReducer.errors);\r\n\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(null);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (e) => {\r\n    dispatch(\r\n      addUser({\r\n        name,\r\n        email,\r\n        password,\r\n        phoneNumber,\r\n      })\r\n    );\r\n  };\r\n\r\n  const showAlert = () => {\r\n    alert(error.msg);\r\n  };\r\n  return (\r\n    <div className=\"main-content\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : user ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <div className=\"header bg-white py-7 py-lg-6\">\r\n          <AuthNavbar />\r\n          <Col\r\n            lg=\"10\"\r\n            md=\"8\"\r\n            className=\"center border\"\r\n            style={{ padding: \"1%\" }}\r\n          >\r\n            <Row>\r\n              <Col>\r\n                <Card className=\"bg-secondary  border\">\r\n                  <CardHeader className=\"bg-transparent\">\r\n                    <div className=\"text-center\">\r\n                      <h3>Créer votre compte</h3>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"px-lg-5 py-lg-5\">\r\n                    <Form role=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                      <FormGroup>\r\n                        <InputGroup className=\"input-group-alternative mb-3\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-hat-3\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Nom et prénom\"\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            invalid={errors[\"name\"]}\r\n                            innerRef={register({\r\n                              required: \"Le champ nom est obligatoire.\",\r\n                            })}\r\n                          />\r\n                        </InputGroup>\r\n                        {errors.name && (\r\n                          <span\r\n                            className=\"mr-2 text-sm\"\r\n                            style={{ color: \"#dd3a4a\" }}\r\n                          >\r\n                            {errors.name.message}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <InputGroup className=\"input-group-alternative mb-3\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-email-83\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={(e) => {\r\n                              setEmail(e.target.value);\r\n                            }}\r\n                            invalid={errors[\"email\"]}\r\n                            innerRef={register({\r\n                              required: \"Le champ email est obligatoire.\",\r\n                            })}\r\n                          />\r\n                        </InputGroup>\r\n                        {errors.email && (\r\n                          <>\r\n                            <span\r\n                              className=\"mr-2 text-sm\"\r\n                              style={{ color: \"#dd3a4a\" }}\r\n                            >\r\n                              {errors.email.message}\r\n                            </span>{\" \"}\r\n                            <br />\r\n                          </>\r\n                        )}\r\n\r\n                        {error && (\r\n                          <span\r\n                            className=\"mr-2 text-sm\"\r\n                            style={{ color: \"#dd3a4a\" }}\r\n                          >\r\n                            {error.msg}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"fas fa-phone-alt\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"phonenumber\"\r\n                            placeholder=\"Numéro de téléphone\"\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                            invalid={errors[\"phonenumber\"]}\r\n                            innerRef={register({\r\n                              required: \"Le champ téléphone est obligatoire.\",\r\n                            })}\r\n                          />\r\n                        </InputGroup>\r\n                        {errors.phonenumber && (\r\n                          <span\r\n                            className=\"mr-2 text-sm\"\r\n                            style={{ color: \"#dd3a4a\" }}\r\n                          >\r\n                            {errors.phonenumber.message}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-lock-circle-open\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            type=\"Password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            invalid={errors[\"password\"]}\r\n                            innerRef={register({\r\n                              required: \"Le mot de passe est obligatoire.\",\r\n                            })}\r\n                          />\r\n                        </InputGroup>\r\n                        {errors.password && (\r\n                          <span\r\n                            className=\"mr-2 text-sm\"\r\n                            style={{ color: \"#dd3a4a\" }}\r\n                          >\r\n                            {errors.password.message}\r\n                          </span>\r\n                        )}\r\n                      </FormGroup>\r\n                      <Row>\r\n                        <Col>\r\n                          <Link to=\"/login\">\r\n                            <div className=\"text-muted font-italic\">\r\n                              <small>Se connecter à un compte existant</small>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col>\r\n                          <div className=\"text-center\">\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                              S'inscrire\r\n                            </Button>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <img\r\n                  alt=\"...\"\r\n                  src={require(\"../Assets/img/brand/register.jpg\").default}\r\n                  style={{ width: \"100%\", marginTop: \"11%\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}